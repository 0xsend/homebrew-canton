#!/bin/bash
set -e

echo "=== Canton Homebrew Formula Update Script ==="

# Get current Canton version from our latest GitHub release
echo "Checking current version from GitHub releases..."
CURRENT_RELEASE=$(curl -s "https://api.github.com/repos/0xsend/homebrew-canton/releases/latest")

if [ "$CURRENT_RELEASE" = "null" ] || echo "$CURRENT_RELEASE" | grep -q '"message": "Not Found"'; then
  echo "No current releases found, will create first release"
  CURRENT_VERSION=""
else
  # Extract Canton version from tag (format: canton-{version})
  CURRENT_TAG=$(echo "$CURRENT_RELEASE" | jq -r '.tag_name')
  CURRENT_VERSION=${CURRENT_TAG#canton-}
  echo "Current version: $CURRENT_VERSION"
fi

# Get latest snapshot release from Digital Asset
echo "Fetching latest Canton snapshot release from Digital Asset..."
LATEST_RELEASE=$(curl -s "https://api.github.com/repos/digital-asset/daml/releases" | \
  jq -r '[.[] | select(.prerelease == true) | select(.assets[] | select(.name | contains("canton-open-source") and endswith(".tar.gz")))][0]')

if [ "$LATEST_RELEASE" = "null" ]; then
  echo "No Canton snapshot release found"
  exit 0
fi

LATEST_VERSION=$(echo "$LATEST_RELEASE" | jq -r '.assets[] | select(.name | contains("canton-open-source") and endswith(".tar.gz")) | .name' | sed 's/canton-open-source-\(.*\)\.tar\.gz/\1/')
LATEST_URL=$(echo "$LATEST_RELEASE" | jq -r '.html_url')
DOWNLOAD_URL=$(echo "$LATEST_RELEASE" | jq -r '.assets[] | select(.name | contains("canton-open-source") and endswith(".tar.gz")) | .browser_download_url')

echo "Latest version: $LATEST_VERSION"

# Check if we need to update
if [ "$CURRENT_VERSION" = "$LATEST_VERSION" ]; then
  echo "Already up to date"
  exit 0
fi

echo "New version available: $LATEST_VERSION"

# Download and calculate SHA256
echo "Downloading $DOWNLOAD_URL to calculate SHA256..."
if command -v wget >/dev/null 2>&1; then
  wget -q "$DOWNLOAD_URL" -O canton-release.tar.gz
else
  curl -s -L "$DOWNLOAD_URL" -o canton-release.tar.gz
fi

# Calculate SHA256 (different command on macOS vs Linux)
if [[ "$OSTYPE" == "darwin"* ]]; then
  SHA256=$(shasum -a 256 canton-release.tar.gz | cut -d' ' -f1)
else
  SHA256=$(sha256sum canton-release.tar.gz | cut -d' ' -f1)
fi
echo "SHA256: $SHA256"

# Update formula
echo "Updating Formula/canton.rb..."
# Use different sed syntax for macOS vs Linux
if [[ "$OSTYPE" == "darwin"* ]]; then
  # macOS
  sed -i '' "s|url \"https://github\.com/digital-asset/daml/releases/download/[^\"]*\"|url \"$DOWNLOAD_URL\"|" Formula/canton.rb
  sed -i '' "s|sha256 \"[a-f0-9]\{64\}\"|sha256 \"$SHA256\"|" Formula/canton.rb
  sed -i '' "s|version \"[^\"]*\"|version \"$LATEST_VERSION\"|" Formula/canton.rb
else
  # Linux
  sed -i "s|url \"https://github\.com/digital-asset/daml/releases/download/[^\"]*\"|url \"$DOWNLOAD_URL\"|" Formula/canton.rb
  sed -i "s|sha256 \"[a-f0-9]\{64\}\"|sha256 \"$SHA256\"|" Formula/canton.rb
  sed -i "s|version \"[^\"]*\"|version \"$LATEST_VERSION\"|" Formula/canton.rb
fi

# Only commit and create release if running in CI (GITHUB_TOKEN is set)
if [ -n "$GITHUB_TOKEN" ]; then
  echo "Running in CI, committing changes and creating release..."
  
  # Commit formula changes
  git config --local user.email "action@github.com"
  git config --local user.name "GitHub Action"
  git add Formula/canton.rb
  git commit -m "feat: update Canton to $LATEST_VERSION

Release URL: $LATEST_URL

ðŸ¤– Generated with GitHub Actions"
  git push
  
  # Create GitHub release and tag
  git tag "canton-$LATEST_VERSION"
  git push origin "canton-$LATEST_VERSION"
  
  gh release create "canton-$LATEST_VERSION" \
    --title "Canton $LATEST_VERSION" \
    --notes "Homebrew formula updated to Canton version $LATEST_VERSION.

This release tracks the Canton snapshot release from Digital Asset:
- Original Release: $LATEST_URL
- Canton Version: $LATEST_VERSION

Install with:
\`\`\`bash
brew tap 0xsend/homebrew-canton
brew install canton
\`\`\`

Or install directly:
\`\`\`bash
brew install 0xsend/homebrew-canton/canton
\`\`\`

ðŸ¤– Auto-generated by GitHub Actions" \
    --latest
  
  echo "Successfully created release for Canton $LATEST_VERSION"
else
  echo "Running locally, formula updated but not committing"
  echo "Updated formula to Canton $LATEST_VERSION"
  echo "- URL: $DOWNLOAD_URL"
  echo "- SHA256: $SHA256"
fi

# Cleanup
rm -f canton-release.tar.gz

echo "=== Update complete ==="